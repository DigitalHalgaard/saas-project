
// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  name           String?
  plan           String         @default("free")
  memberships    Membership[]
  projectAccess  ProjectAccess[]
  taskAccess     TaskAccess[]
  timeLogs       TimeLog[]
  createdAt      DateTime       @default(now())
}

model Organization {
  id             String         @id @default(cuid())
  name           String
  memberships    Membership[]
  projects       Project[]
  createdAt      DateTime       @default(now())
}

model Membership {
  id             String         @id @default(cuid())
  userId         String
  organizationId String
  role           String
  user           User           @relation(fields: [userId], references: [id])
  organization   Organization   @relation(fields: [organizationId], references: [id])
  createdAt      DateTime       @default(now())
}

model Project {
  id             String         @id @default(cuid())
  name           String
  description    String?
  organizationId String
  organization   Organization   @relation(fields: [organizationId], references: [id])
  tasks          Task[]
  timeLogs       TimeLog[]
  projectAccess  ProjectAccess[]
  billable       Boolean        @default(true)
  createdAt      DateTime       @default(now())
}

model Task {
  id             String         @id @default(cuid())
  name           String
  status         String
  description    String?
  projectId      String
  project        Project        @relation(fields: [projectId], references: [id])
  timeLogs       TimeLog[]
  taskAccess     TaskAccess[]
  billable       Boolean        @default(true)
  createdAt      DateTime       @default(now())
}

model TimeLog {
  id             String         @id @default(cuid())
  taskId         String
  projectId      String
  userId         String
  organizationId String
  startedAt      DateTime
  endedAt        DateTime?
  duration       Int?
  note           String?
  createdAt      DateTime       @default(now())

  task           Task           @relation(fields: [taskId], references: [id])
  project        Project        @relation(fields: [projectId], references: [id])
  user           User           @relation(fields: [userId], references: [id])
  organization   Organization   @relation(fields: [organizationId], references: [id])
}

model ProjectAccess {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  role      String
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
}

model TaskAccess {
  id        String   @id @default(cuid())
  userId    String
  taskId    String
  role      String
  user      User     @relation(fields: [userId], references: [id])
  task      Task     @relation(fields: [taskId], references: [id])
}
